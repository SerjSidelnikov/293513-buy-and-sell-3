'use strict';

const express = require(`express`);
const request = require(`supertest`);

const category = require(`./category`);
const CategoryService = require(`../data-service/category`);
const {HttpCode} = require(`../../constants`);

const mockData = [
  {
    "id": `nZAuUR`,
    "type": `offer`,
    "title": `Продам коллекцию журналов «Огонёк».`,
    "description": `Кажется, что это хрупкая вещь. Не пытайтесь торговаться. Цену вещам я знаю.`,
    "sum": 94414,
    "picture": `item13.jpg`,
    "category": [
      `Журналы`,
      `Книги`
    ],
    "comments": [
      {
        "id": `k89ppW`,
        "text": `А где блок питания? Почему в таком ужасном состоянии? Вы что?! В магазине дешевле. Неплохо, но дорого. Совсем немного...`
      }
    ]
  },
  {
    "id": `r2d8ZQ`,
    "type": `offer`,
    "title": `Продам книги Стивена Кинга.`,
    "description": `Если товар не понравится — верну всё до последней копейки. Мой дед не мог её сломать. Пользовались бережно и только по большим праздникам.,`,
    "sum": 81986,
    "picture": `item03.jpg`,
    "category": [
      `Посуда`
    ],
    "comments": [
      {
        "id": `XLPylI`,
        "text": `Оплата наличными или перевод на карту? С чем связана продажа? Почему так дешёво?`
      }
    ]
  },
  {
    "id": `snI5qp`,
    "type": `offer`,
    "title": `Куплю детские санки.`,
    "description": `Это настоящая находка для коллекционера! Две страницы заляпаны свежим кофе. Кому нужен этот новый телефон, если тут такое... Бонусом отдам все аксессуары. Не пытайтесь торговаться. Цену вещам я знаю.`,
    "sum": 87103,
    "picture": `item06.jpg`,
    "category": [
      `Животные`
    ],
    "comments": [
      {
        "id": `4OFDW6`,
        "text": `Продаю в связи с переездом. Отрываю от сердца. Вы что?! В магазине дешевле. С чем связана продажа? Почему так дешёво? А где блок питания?`
      }
    ]
  },
  {
    "id": `vChz-8`,
    "type": `sale`,
    "title": `Куплю антиквариат.`,
    "description": `Пользовались бережно и только по большим праздникам., Продаю с болью в сердце... Две страницы заляпаны свежим кофе. Кажется, что это хрупкая вещь. Это настоящая находка для коллекционера!`,
    "sum": 67124,
    "picture": `item01.jpg`,
    "category": [
      `Книги`
    ],
    "comments": [
      {
        "id": `xaFEtE`,
        "text": `А сколько игр в комплекте? Неплохо, но дорого. Совсем немного... Продаю в связи с переездом. Отрываю от сердца. Вы что?! В магазине дешевле. Оплата наличными или перевод на карту? Почему в таком ужасном состоянии? С чем связана продажа? Почему так дешёво?`
      },
      {
        "id": `y82x2r`,
        "text": `Оплата наличными или перевод на карту? С чем связана продажа? Почему так дешёво? Продаю в связи с переездом. Отрываю от сердца. А сколько игр в комплекте? Совсем немного...`
      },
      {
        "id": `FVuhrX`,
        "text": `Вы что?! В магазине дешевле. А сколько игр в комплекте? Совсем немного... Оплата наличными или перевод на карту? Неплохо, но дорого. Почему в таком ужасном состоянии?`
      }
    ]
  },
  {
    "id": `RP9Xq8`,
    "type": `sale`,
    "title": `Куплю антиквариат.`,
    "description": `Кажется, что это хрупкая вещь. Товар в отличном состоянии. Мой дед не мог её сломать. Если товар не понравится — верну всё до последней копейки.`,
    "sum": 15794,
    "picture": `item11.jpg`,
    "category": [
      `Разное`
    ],
    "comments": [
      {
        "id": `DxzonK`,
        "text": `А сколько игр в комплекте? Неплохо, но дорого. Почему в таком ужасном состоянии? С чем связана продажа? Почему так дешёво? Продаю в связи с переездом. Отрываю от сердца. Вы что?! В магазине дешевле. Совсем немного...`
      },
      {
        "id": `FxzNp-`,
        "text": `Неплохо, но дорого.`
      },
      {
        "id": `mVR97L`,
        "text": `А где блок питания? Вы что?! В магазине дешевле. Продаю в связи с переездом. Отрываю от сердца. Почему в таком ужасном состоянии? Совсем немного... Оплата наличными или перевод на карту? А сколько игр в комплекте?`
      }
    ]
  }
];

const app = express();
app.use(express.json());
category(app, new CategoryService(mockData));

describe(`API returns category list`, () => {
  let response;

  beforeAll(async () => {
    response = await request(app).get(`/categories`);
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`Returns list of 5 categories`, () => expect(response.body.length).toBe(5));
  test(`Category names are "Журналы", "Книги", "Посуда", "Животные", "Разное"`, () => {
    expect(response.body).toEqual([`Журналы`, `Книги`, `Посуда`, `Животные`, `Разное`]);
  });
});
